version: '3.5'

x-podlike:
  # template the `site` service
  site:

    pod:
      # template for the controller
      inline:
        pod:
          # image will default to rycus86/podlike
          command: -logs
          ports:
          - 8080:80
          # the `/var/run/docker.sock` volume is also added by default

    transformer:
      # template for the main component
      inline: |
        app:
          environment: # override environment variables
            - HTTP_HOST=127.0.0.1
            - HTTP_PORT={{ .Args.InternalPort }}
          # the image will be copied over from the original service definition

    templates:
      inline:
        # add in a proxy component
        proxy:
          image: nginx:1.13.10
          volumes:
          - nginx-config:/etc/nginx/conf.d

    init:
      inline:
        # write the Nginx config from an inline string for demo purposes
        config-writer:
          image: rycus86/write
          depends_on:
          - testing
          volumes:
          - nginx-config:/etc/nginx/conf.d
          environment:
            NO_WAIT: 1
            TARGET: /etc/nginx/conf.d/default.conf
            DATA: |
              proxy_cache_path  /tmp/nginx.cache  levels=1:2  keys_zone=cache:10m inactive=12h max_size=50m;

              server {
                  listen       80;
                  server_name  localhost;

                  # proxy all requests to the app on port 12000
                  location / {
                      proxy_pass   http://127.0.0.1:12000;

                      proxy_set_header       Host $$host;
                      proxy_cache            cache;
                      proxy_cache_valid      200 5m;
                      proxy_cache_use_stale  error timeout invalid_header updating
                                             http_500 http_502 http_503 http_504;
                  }
              }

    args:
      InternalPort: 12000

services:

  site:
    image: rycus86/demo-site

volumes:
  nginx-config:
